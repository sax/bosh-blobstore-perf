#!/bin/bash

RUN_DIR=/var/vcap/sys/run/blobstore
LOG_DIR=/var/vcap/sys/log/blobstore
PIDFILE=$RUN_DIR/nginx.pid

DATA=/var/vcap/store/shared
TMP_DIR=$DATA/tmp/uploads

mkdir -p /data/www
mkdir -p /data/client_temp

chown -R vcap:vcap /data

function pid_is_running() {
  declare pid="$1"
  ps -p "${pid}" >/dev/null 2>&1
}

function pid_guard() {
  declare pidfile="$1" name="$2"

  echo "------------ STARTING $(basename "$0") at $(date) --------------" | tee /dev/stderr

  if [ ! -f "${pidfile}" ]; then
    return 0
  fi

  local pid
  pid=$(head -1 "${pidfile}")

  if pid_is_running "${pid}"; then
    echo "${name} is already running, please stop it first"
    exit 1
  fi

  echo "Removing stale pidfile"
  rm "${pidfile}"
}

function wait_pid_death() {
  declare pid="$1" timeout="$2"

  local countdown
  countdown=$(( timeout * 10 ))

  while true; do
    if ! pid_is_running "${pid}"; then
      return 0
    fi

    if [ ${countdown} -le 0 ]; then
      return 1
    fi

    countdown=$(( countdown - 1 ))
    sleep 0.1
  done
}

function kill_and_wait() {
  declare pidfile="$1" timeout="${2:-25}" sigkill_on_timeout="${3:-1}"

  if [ ! -f "${pidfile}" ]; then
    echo "Pidfile ${pidfile} doesn't exist"
    exit 0
  fi

  local pid
  pid=$(head -1 "${pidfile}")

  if [ -z "${pid}" ]; then
    echo "Unable to get pid from ${pidfile}"
    exit 1
  fi

  if ! pid_is_running "${pid}"; then
    echo "Process ${pid} is not running"
    rm -f "${pidfile}"
    exit 0
  fi

  echo "Killing ${pidfile}: ${pid} "
  kill "${pid}"

  if ! wait_pid_death "${pid}" "${timeout}"; then
    if [ "${sigkill_on_timeout}" = "1" ]; then
      echo "Kill timed out, using kill -9 on ${pid}"
      kill -9 "${pid}"
      sleep 0.5
    fi
  fi

  if pid_is_running "${pid}"; then
    echo "Timed Out"
    exit 1
  else
    echo "Stopped"
    rm -f "${pidfile}"
  fi
}







case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $DATA
    mkdir -p $TMP_DIR
    chown vcap:vcap $RUN_DIR $LOG_DIR $DATA

    pid_guard "${PIDFILE}" "blobstore_nginx"
    echo $$ > "${PIDFILE}"

    exec /var/vcap/packages/nginx/sbin/nginx \
      -c /var/vcap/jobs/blobstore/config/nginx.conf \
      -g "worker_processes 4;" \
      >>$LOG_DIR/nginx.stdout.log 2>>$LOG_DIR/nginx.stderr.log
    ;;

  stop)
    timeout=1
    sigkill_on_timeout=0
    kill_and_wait "${PIDFILE}" "${timeout}" "${sigkill_on_timeout}"
    ;;

  *)
    echo "Usage: nginx_ctl {start|stop}"
    ;;
esac
exit 0

